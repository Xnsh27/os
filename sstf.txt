#include <stdio.h>
#include <stdbool.h>
#include <limits.h>

int find_nearest(int requests[], bool visited[], int head, int n) {
    int min_distance = INT_MAX;
    int index = -1;
    for (int i = 0; i < n; i++) {
        if (!visited[i]) {
            int distance = abs(requests[i] - head);
            if (distance < min_distance) {
                min_distance = distance;
                index = i;
            }
        }
    }
    return index;
}

void SSTF(int requests[], int n, int head) {
    int total_head_movement = 0;
    bool visited[n];

    for (int i = 0; i < n; i++) visited[i] = false;

    printf("SSTF Disk Scheduling:\n");
    printf("Order of requests: ");

    for (int i = 0; i < n; i++) {
        int index = find_nearest(requests, visited, head, n);
        visited[index] = true;
        printf("%d ", requests[index]);
        total_head_movement += abs(head - requests[index]);
        head = requests[index];
    }

    printf("\nTotal head movement: %d\n", total_head_movement);
}

int main() {
    int requests[] = {98, 183, 37, 122, 14, 124, 65, 67};
    int n = sizeof(requests) / sizeof(requests[0]);
    int head = 53; // initial head position
    SSTF(requests, n, head);
    return 0;
}
