#include <stdio.h>

#define MAX_PROCESSES 10

typedef struct {
    int pid;        // Process ID
    int burstTime;  // Burst Time
    int waitingTime; // Waiting Time
    int turnaroundTime; // Turnaround Time
} Process;

void calculateTimes(Process processes[], int n) {
    processes[0].waitingTime = 0; // First process has no waiting time

    // Calculate waiting time and turnaround time
    for (int i = 1; i < n; i++) {
        processes[i].waitingTime = processes[i - 1].waitingTime + processes[i - 1].burstTime;
    }

    for (int i = 0; i < n; i++) {
        processes[i].turnaroundTime = processes[i].waitingTime + processes[i].burstTime;
    }
}

void printProcesses(Process processes[], int n) {
    printf("PID\tBurst Time\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t%d\t\t%d\t\t%d\n", processes[i].pid, processes[i].burstTime, processes[i].waitingTime, processes[i].turnaroundTime);
    }
}

int main() {
    Process processes[MAX_PROCESSES];
    int n;

    printf("Enter number of processes: ");
    scanf("%d", &n);

    for (int i = 0; i < n; i++) {
        processes[i].pid = i + 1; // Assign PID
        printf("Enter Burst Time for Process %d: ", processes[i].pid);
        scanf("%d", &processes[i].burstTime);
    }

    calculateTimes(processes, n);
    printProcesses(processes, n);

    return 0;
}
